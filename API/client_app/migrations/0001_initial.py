# Generated by Django 3.2.4 on 2021-07-14 08:36

import client_app.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('deposit', models.FloatField(default=0, verbose_name='Deposito')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name address')),
                ('address1', models.CharField(max_length=100, verbose_name='Indirizzo 1')),
                ('address2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Indirizzo 2')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Paese')),
                ('province', models.CharField(max_length=100, verbose_name='Provincia')),
                ('city', models.CharField(max_length=100, verbose_name='Città')),
                ('zip', models.CharField(max_length=100, verbose_name='CAP')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Note Aggiuntive')),
                ('default', models.BooleanField(default=False, verbose_name='Imposta Come Predefinito')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to=client_app.models.upload_video, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('order', models.IntegerField(default=0, verbose_name='Ordine di apparizione')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client_app.media')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='Modello della borsa')),
                ('conditions', models.PositiveSmallIntegerField(choices=[(1, 'OTTIME'), (2, 'BUONE'), (3, 'SCARSE')], verbose_name='Condizioni della borsa')),
                ('year', models.PositiveSmallIntegerField(choices=[(1, '1-2'), (2, '2+')], verbose_name='Anni della borsa')),
                ('size', models.PositiveSmallIntegerField(choices=[(1, 'PICCOLA'), (2, 'MEDIA'), (3, 'GRANDE')], verbose_name='Dimensioni della borsa')),
                ('description', models.CharField(max_length=2000, null=True, verbose_name='Descrizione della borsa')),
                ('price_retail', models.FloatField(default=0, verbose_name='Prezzo')),
                ('price_offer', models.FloatField(default=0, verbose_name='Prezzo offerta')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'PREPARATION'), (2, 'REVIEW'), (3, 'REJECT'), (4, 'AVAILABLE'), (5, 'UNAVAILABLE')], default=1)),
                ('delivery_type', models.PositiveSmallIntegerField(choices=[(1, 'FACE_TO_FACE'), (2, 'RIDER'), (12, 'FACE_TO_FACE_OR_RIDER')])),
                ('kit_payed', models.BooleanField(default=False, verbose_name='Indica se è stato pagato il kit')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.brand')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.color')),
                ('delivery_kit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.address')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.material')),
                ('media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.media')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.PositiveSmallIntegerField(default=1)),
                ('date_start', models.DateTimeField(verbose_name='Data di inizio del prestito')),
                ('date_end', models.DateTimeField(verbose_name='Data di fine del prestito')),
                ('date_begin_order', models.DateTimeField(null=True, verbose_name="Data di conferma dell'inizio dell'ordine")),
                ('date_end_order', models.DateTimeField(null=True, verbose_name="Data di conferma della fine dell'ordine")),
                ('delivery_mode', models.PositiveSmallIntegerField(choices=[(1, 'FACE_TO_FACE'), (2, 'RIDER'), (12, 'FACE_TO_FACE_OR_RIDER')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ManyToManyField(to='client_app.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IssueMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client_app.issue')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='client_app.product'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=client_app.models.upload_img)),
                ('active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0, verbose_name='Ordine di apparizione')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client_app.media')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('products', models.ManyToManyField(to='client_app.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=50, unique=True)),
                ('socket_id', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client_app.media')),
                ('owner', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('product', models.ManyToManyField(to='client_app.Product')),
            ],
        ),
    ]
